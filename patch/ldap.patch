--- a/settings_ldap.py	2017-10-12 09:27:03.375617435 +0800
+++ b/settings_ldap.py	2017-10-12 16:37:31.059680277 +0800
@@ -1,6 +1,7 @@
+import distutils
 import os
 import ldap
-from django_auth_ldap.config import LDAPSearch, GroupOfNamesType
+from django_auth_ldap.config import LDAPSearch, PosixGroupType
 
 
 # Baseline configuration.
@@ -8,9 +9,8 @@
 
 AUTH_LDAP_BIND_DN =  os.environ.get('AUTH_LDAP_BIND_DN', 'cn=Manager,dc=example,dc=com')
 AUTH_LDAP_BIND_PASSWORD = os.environ.get('AUTH_LDAP_BIND_PASSWORD', '')
-AUTH_LDAP_USER_FILTER =  os.environ.get('AUTH_LDAP_USER_FILTER', '(uid=%(user)s)')
 AUTH_LDAP_USER_SEARCH = LDAPSearch(os.environ.get('AUTH_LDAP_USER_SEARCH', 'ou=user,dc=example,dc=com'),
-    ldap.SCOPE_SUBTREE, AUTH_LDAP_USER_FILTER)
+    ldap.SCOPE_SUBTREE, '(uid=%(user)s)')
 
 # Populate the Django user from the LDAP directory.
 AUTH_LDAP_USER_ATTR_MAP = {
@@ -18,3 +18,8 @@
     'last_name': 'sn',
     'email': 'mail',
 }
+
+AUTH_LDAP_ALWAYS_UPDATE_USER = bool(distutils.util.strtobool(os.environ.get('AUTH_LDAP_ALWAYS_UPDATE_USER', 'True')))
+AUTH_LDAP_GROUP_TYPE = PosixGroupType()
+AUTH_LDAP_GROUP_SEARCH = LDAPSearch(os.environ.get('AUTH_LDAP_GROUP_SEARCH', 'ou=group,dc=example,dc=com'), ldap.SCOPE_SUBTREE, "(objectClass=posixGroup)")
+AUTH_LDAP_REQUIRE_GROUP = os.environ.get("AUTH_LDAP_REQUIRE_GROUP", "cn=enabled,ou=groups,dc=example,dc=com")
